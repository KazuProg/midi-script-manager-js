!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).MIDIScriptManager=t()}(this,(function(){"use strict";const e={Note:"n",ControlChange:"c",CC:"c",RawNoteOff:128,RawNoteOn:144,RawControlChange:176};class t{#e;#t;#i;#s;#a=null;#n=null;#r=null;#o;constructor(e,t,i,s,a,n={}){this.#e=e,this.#t=t,this.#i=i,this.#s=s,this.#a=n?.name||null,this.#n=n?.script?.name||null,this.#r=n?.script?.code||null,this.#o=a}get device(){return this.#e}get type(){return this.#t}get channel(){return this.#i}get number(){return this.#s}get defaultName(){let t;switch(this.type){case e.Note:t=this.#c(this.#s);break;case e.CC:t=`0x${this.#s.toString(16).toUpperCase().padStart(2,"0")}`}return t}get name(){return null!==this.#a?this.#a:this.defaultName}get isDefaultName(){return null===this.#a}get scriptName(){return this.scriptCode?this.#n||"No Name":null}get scriptCode(){return this.#r}set name(e){""===(e=e.trim())&&(e=null),this.#a=e,this.#o()}set scriptName(e){""===(e=e.trim())&&(e=null),this.#n=e,this.#o()}set scriptCode(e){""===(e=e.trim())?(this.#n=null,this.#r=null):this.#r=e.trim(),this.#o()}executeScript(e={}){if(this.#r)try{new Function(...Object.keys(e),this.#r)(...Object.values(e))}catch(e){console.error("An error occurred while executing the custom script:",e)}}get midiID(){return this.type+((this.channel<<8)+this.number).toString(16).padStart(3,"0")}toJSON(){const e={midi:this.midiID,name:this.name};return this.#r&&(e.script={name:this.#n,code:this.#r}),e}#c(e){const t="C|C#|D|D#|E|F|F#|G|G#|A|A#|B".split("|"),i=Math.floor(e/12)-1;return`${t[e%12]}${i}`}}class i{#h;#d;#m;#o;#u;#p;constructor(t,i,s,a={}){if(!(t instanceof MIDIInput))throw new TypeError("Expected a MIDIInput object");this.#h=t,this.#h.onmidimessage=this.#l.bind(this),this.#m=i,this.#o=s,this.#u={executeScript:!1,onMessage:null,data:null,midiAccess:null,...a},this.#p={[e.Note]:Array.from({length:16},(()=>[])),[e.CC]:Array.from({length:16},(()=>[]))},this.#u.data&&this.applyMappings(this.#u.data.mappings),this.#u.midiAccess&&this.#u.midiAccess.outputs.forEach((e=>{e.name===this.name&&e.manufacturer===this.manufacturer&&(this.#d=e)}))}applyMappings(e){if(e)for(const i of e){const e=i.midi.substr(0,1),s=parseInt(i.midi.substr(1,1),16),a=parseInt(i.midi.substr(2,2),16),n=new t(this,e,s,a,this.#g.bind(this),i);e in this.#p&&(this.#p[e][s][a]=n)}}get name(){return this.#h.name}get manufacturer(){return this.#h.manufacturer}get serviceName(){return this.#m}get noteElements(){return this.#p[e.Note]}get ccElements(){return this.#p[e.CC]}get elements(){return[...this.noteElements.flat(),...this.ccElements.flat()]}findElementById(e){return this.elements.find((t=>t.midiID===e))}#l(i){const[s,a,n]=i.data,r=15&s;let o;switch(240&s){case e.RawNoteOn:case e.RawNoteOff:o=e.Note;break;case e.RawControlChange:o=e.CC;break;default:return}const c=this.#p[o];c[r][a]||(c[r][a]=new t(this,o,r,a,this.#g.bind(this)),this.#g());const h=c[r][a];if(this.#u.onMessage){const e={raw:i.data,status:s,data1:a,data2:n,type:o,channel:r};this.#u.onMessage(this,h,e)}if(this.#u.executeScript){const e=e=>{this.#d&&this.#d.send([s,a,e])};h.executeScript({status:s,data1:a,data2:n,type:o,channel:r,number:a,value:n,val:n/127,output:e})}}#g(){this.#o(this)}toJSON(){return{device:{name:this.name,manufacturer:this.manufacturer},service:this.#m,mappings:this.elements.map((e=>e.toJSON()))}}}class s{#v;constructor(e){this.#v=e}load(){return new Promise(((e,t)=>{e(JSON.parse(localStorage.getItem(this.#v)))}))}save(e){localStorage.setItem(this.#v,JSON.stringify(e))}}class a{#f;#w;constructor(e,t){this.#f=e,this.#w=t}load(){return new Promise(((e,t)=>{const i=t=>{t.origin===this.#f&&t.data.sender&&t.data.sender===this.#w&&(window.removeEventListener("message",i),e(t.data.data))};window.addEventListener("message",i),window.opener.postMessage({sender:this.#w,data:"requestData"},this.#f)}))}save(e){window.opener.postMessage({sender:this.#w,data:e},this.#f)}}class n{#y;#C;constructor(e){const t=new URLSearchParams(window.location.search).get("targetOrigin");if(window.opener&&t){this.#y=new a(t,e.postMessageKey);try{window.opener.addEventListener("beforeunload",(()=>{window.close()}))}catch(e){console.log(e)}}else this.#y=new s(e.localStorageKey),window.addEventListener("storage",(t=>{t.key===e.localStorageKey&&(this.#C=JSON.parse(t.newValue)||[])}));this.#y.load().then((e=>{this.#C=e||[]}))}loadAll(){return this.#C}load(e,t,i){return this.#C.find((s=>s.device.name===e&&s.device.manufacturer===t&&s.service===i))}save(e){if(!e instanceof i)throw new Error("Invalid device type");this.saveObject(e.toJSON())}saveObject(e){if(!this.isValidKeymapObject(e))throw new Error("The format of the key mapping object is invalid.");const t=this.#C.find((t=>t.device.name===e.device.name&&t.device.manufacturer===e.device.manufacturer&&t.service===e.service));t?Object.assign(t,e):this.#C.push(e),this.#y.save(this.#C)}isValidKeymapObject(e){return"object"==typeof e&&null!==e&&("string"==typeof e.device?.name&&"string"==typeof e.device?.manufacturer&&("string"==typeof e.service&&!!Array.isArray(e.mappings)))}}class r{static MessageTypes=e;static scriptOrigin;#N;#m;#u={};#b=[];#I;constructor(e,t={}){this.#m=e,this.#u={localStorageKey:"midi-scripts",postMessageKey:"MIDIScriptManager",executeScript:!1,onMessage:null,onDeviceChange:null,...t},this.#I=new n(this.#u)}get devices(){return this.#b}async requestAccess(){if(!navigator.requestMIDIAccess)throw new Error("Web MIDI API is not supported in this browser.");try{const e=await navigator.requestMIDIAccess();e.onstatechange=e=>{"input"===e.port.type&&this.#M(e.port)},e.inputs.forEach((e=>{this.#M(e)})),this.#N=e}catch(e){throw new Error(`Failed to request MIDI access: ${e.message}`)}}findDevice(e,t){return this.#b.find((i=>i.name===e&&i.manufacturer===t))}openCustomScriptEditor(){const e=`${r.scriptOrigin}/midi-script-manager-js/custom-script-editor/`,t=new URLSearchParams({service:this.#m,targetOrigin:location.origin}),i=window.open(`${e}?${t.toString()}`,"CustomScriptEditor","width=640,height=720");window.addEventListener("message",(e=>{if(e.origin===r.scriptOrigin&&"MIDIScriptManager"===e.data.sender){const t=e.data.data;if("requestData"===t)return void i.postMessage({sender:"MIDIScriptManager",data:this.#I.loadAll()},r.scriptOrigin);for(const e of t)this.importKeymapObject(e)}}))}importKeymapObject(e,t=!1){if(!this.#I.isValidKeymapObject(e))throw new Error("The format of the key mapping object is invalid.");if(!t&&e.service!==this.#m)throw new Error(`The service name of the provided object (${e.service}) does not match the current service name (${this.#m}).`);const i=this.findDevice(e.device.name,e.device.manufacturer);if(!t&&!i)throw new Error(`The device in the provided object (${e.device.manufacturer} ${e.device.name}) is not currently connected.`);this.#I.saveObject(e),e.service===this.#m&&i&&i.applyMappings(e.mappings)}#M(e){const t=this.findDevice(e.name,e.manufacturer);if(t&&this.#b.splice(this.#b.indexOf(t),1),"connected"===e.state){const t=new i(e,this.#m,this.#D.bind(this),{...this.#u,data:this.#I.load(e.name,e.manufacturer,this.#m),midiAccess:this.#N});this.#b.push(t),this.#u.onDeviceChange&&this.#u.onDeviceChange(t)}}#D(e){this.#I.save(e)}}if(document.currentScript&&document.currentScript.src){const e=document.currentScript.src,t=new URL(e).origin;r.scriptOrigin=t}else r.scriptOrigin="https://kazuprog.github.io";return r}));
